@model QLNV.Model.HopDong

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
    <link href="~/Content/bootstrap-datepicker.css" rel="stylesheet" />
    <link href="~/Content/bootstrap.min.css" rel="stylesheet" />
}
<style>
    a{
        text-decoration:none;
    }
    .col-md-6 {
        font-weight: bold;
        font-size: 20px;
        color: blue;
    }

    .btt a {
        font-size: 20px;
        color: blue;
        font-weight: bold;
    }

    .card {
        background-color: lightblue;
    }

    .form-control {
        font-weight: bold;
    }

    .card-body {
        color: blue;
        font-weight: bold;
    }

    .col-md-10 {
        color: black;
    }
</style>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <!-- Content Wrapper. Contains page content -->
    <div class="content-wrapper">
        <!-- Main content -->
        <section class="content my-2">

            <!-- Default box -->
            <div class="card">
                <div class="card-header">
                    <div class=" row">
                        <div class=" col-md-6">
                            <strong>TẠO HỢP ĐỒNG</strong>
                        </div>
                        <div class=" col-md-6 text-right">
                            <button type="button" class="btt btn-success"> @Html.ActionLink("Trở về", "Index") </button>
                        </div>
                    </div>

                    <div class="card-tools">
                        <button type="button" class="btn btn-tool" data-card-widget="collapse" title="Collapse">
                            <i class="fas fa-minus"></i>
                        </button>

                    </div>
                </div>
                <div class="card-body">

                    <div class="form-group">
                        @Html.LabelFor(model => model.IDhopDong, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.IDhopDong, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.IDhopDong, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TenHopDong, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TenHopDong, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TenHopDong, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.LoaiHD, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.LoaiHD, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.LoaiHD, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NoiDung, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NoiDung, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NoiDung, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TimeK, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TimeK, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimeK, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.TimeKT, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.TimeKT, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.TimeKT, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.NgayStart, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.NgayStart, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.NgayStart, "", new { @class = "text-danger" })
                        </div>
                    </div>

                    <div class="form-group">
                        <div class="col-md-offset-2 col-md-10">
                            <input type="submit" value="Tạo" class="btn btn-outline-danger" />
                        </div>
                    </div>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->

        </section>
        <!-- /.content -->
    </div>
}

<div>
    <button type="button" class="btt btn-success"> @Html.ActionLink("Trở về", "Index") </button>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script src="~/Scripts/jquery-3.6.1.min.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script src="~/Scripts/bootstrap-datepicker.min.js"></script>

    <script>
        $(document).ready(function () {
            var fromdate = new Date();
            var todayfrom = new Date(fromdate.getFullYear(), fromdate.getMonth(), fromdate.getDate());

            todayfrom.setMonth(fromdate.getMonth() - 6);
            var optSimple = {
                format: 'dd-mm-yyyy',
                todayHighlight: true,
                orientation: 'bottom center',
                autoclose: true
            };
            $('#TimeK').datepicker(optSimple);
            $('#TimeK').datepicker('setDate', todayfrom);
            ///////////
            var fromdate = new Date();
            var todayfrom = new Date(fromdate.getFullYear(), fromdate.getMonth(), fromdate.getDate());

            todayfrom.setMonth(fromdate.getMonth() - 6);
            var optSimple = {
               
                format: 'dd-mm-yyyy',
                todayHighlight: true,
                orientation: 'bottom center',
                autoclose: true
            };
            $('#TimeKT').datepicker(optSimple);
            $('#TimeKT').datepicker('setDate', todayfrom);
            ///////////
            var fromdate = new Date();
            var todayfrom = new Date(fromdate.getFullYear(), fromdate.getMonth(), fromdate.getDate());

            todayfrom.setMonth(fromdate.getMonth() - 6);
            var optSimple = {
                format: 'dd-mm-yyyy',
                todayHighlight: true,
                orientation: 'bottom center',
                autoclose: true
            };
            $('#NgayStart').datepicker(optSimple);
            $('#NgayStart').datepicker('setDate', todayfrom);

        });
    </script>
}
